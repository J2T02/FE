import React, { useEffect, useState } from "react";
import {
  Tag,
  Rate,
  Typography,
  Divider,
  Space,
  Select,
  Pagination,
} from "antd";
import dayjs from "dayjs";
import WorkSchedule from "./WorkSchedule";
import FeedbackCard from "./FeedbackCard";
import axios from "axios";

const { Title, Text } = Typography;
const { Option } = Select;

const DoctorDetail = ({ doctorId }) => {
  const [doctor, setDoctor] = useState({
  "doc_ID": 2,
  "gender": "N·ªØ",
  "yob": "1988-03-15",
  "experience": 6,
  "edu_LevelName": "Th·∫°c sƒ©",
  "statusText": "ƒêang l√†m vi·ªác",
  "full_Name": "Tr·∫ßn Th·ªã Lan",
  "mail": "lan.bs88@gmail.com",
  "phone": "0908123456",
  "img": "/femaledoctor.jpg", 
  "avgStar": 4.8,
  "createAt": "2019-06-01",
  "certificates": [
    "Ch·ª©ng ch·ªâ IVF n√¢ng cao",
    "Ch·ª©ng ch·ªâ N·ªôi ti·∫øt sinh s·∫£n",
    "Ch·ª©ng ch·ªâ H·ªó tr·ª£ sinh s·∫£n c·∫•p qu·ªëc t·∫ø"
  ]
});
  const [feedbacks, setFeedbacks] = useState([
  {
    fb_ID: 309,
    star: 5,
    content: "B√°c sƒ© nh·∫π nh√†ng ƒë·∫øn m·ª©c t√¥i t∆∞·ªüng m√¨nh ƒëang ƒë∆∞·ª£c ch·ªØa l√†nh b·∫±ng t√¢m linh ü§£.",
    createAt: "2025-06-20",
    hus_Name: "Nguy·ªÖn VƒÉn H√πng",
    wife_Name: "Ph·∫°m Th·ªã Mai",
  },
  {
    fb_ID: 310,
    star: 5,
    content: "V·ª´a v√†o ƒë√£ th·∫•y b√°c sƒ© c∆∞·ªùi, t√¥i qu√™n lu√¥n l√Ω do m√¨nh ƒë·∫øn kh√°m üòÖ.",
    createAt: "2025-06-21",
    hus_Name: "Tr·∫ßn C√¥ng Minh",
    wife_Name: "Nguy·ªÖn Th·ªã H∆∞·ªùng",
  },
  {
    fb_ID: 311,
    star: 5,
    content: "T√¥i b·ªã m·∫•t t·∫≠p trung m·ªói khi b√°c sƒ© n√≥i... n√™n xin ƒë∆∞·ª£c t√°i kh√°m nhi·ªÅu l·∫ßn üòÇ.",
    createAt: "2025-06-22",
    hus_Name: "L√™ VƒÉn Th√°i",
    wife_Name: "V≈© Ng·ªçc H√†",
  },
  {
    fb_ID: 312,
    star: 4,
    content: "Kh√°m xong ra ngo√†i m√† v·ª£ t√¥i b·∫£o 'em th·∫•y anh nh√¨n b√°c sƒ© h∆°i l√¢u ƒë·∫•y nha' üôà.",
    createAt: "2025-06-23",
    hus_Name: "Phan VƒÉn Nghƒ©a",
    wife_Name: "L√™ Th·ªã H·ªìng",
  },
  {
    fb_ID: 313,
    star: 5,
    content: "L·∫ßn ƒë·∫ßu ti√™n ƒëi b·ªánh vi·ªán m√† th·∫•y nh∆∞... ƒë·∫øn spa! C·∫£m ∆°n b√°c sƒ© r·∫•t nhi·ªÅu!",
    createAt: "2025-06-24",
    hus_Name: "ƒê·ªó M·∫°nh H√πng",
    wife_Name: "ƒê√†o Th·ªã Kim",
  },
  {
    fb_ID: 314,
    star: 5,
    content: "Gi·ªçng b√°c sƒ© nh·∫π nh√†ng ƒë·∫øn m·ª©c t√¥i t∆∞·ªüng ƒëang nghe ASMR tr·ªã li·ªáu üòå.",
    createAt: "2025-06-25",
    hus_Name: "B√πi Minh Qu√¢n",
    wife_Name: "Tr·ªãnh Ng·ªçc Anh",
  },
  {
    fb_ID: 315,
    star: 5,
    content: "Chuy√™n m√¥n v·ªØng, t√¢m l√Ω t·ªët, ngo·∫°i h√¨nh nh∆∞ idol. Kh√¥ng bi·∫øt ch√™ ch·ªó n√†o!",
    createAt: "2025-06-26",
    hus_Name: "L√Ω ƒê·ª©c Th·ªãnh",
    wife_Name: "T√¥ Th·ªã Tuy·∫øt",
  },
  {
    fb_ID: 316,
    star: 4,
    content: "C√≥ l·∫Ω t√¥i c·∫ßn b√°c sƒ© kh√°m tim sau bu·ªïi h√¥m nay‚Ä¶ tim ƒë·∫≠p m·∫°nh qu√°!",
    createAt: "2025-06-26",
    hus_Name: "V≈© H·∫£i ƒêƒÉng",
    wife_Name: "L√™ Nh∆∞ Qu·ª≥nh",
  },
  {
    fb_ID: 317,
    star: 5,
    content: "N·∫øu ƒë∆∞·ª£c ch·ªçn b√°c sƒ© kh√°m c·∫£ ƒë·ªùi, t√¥i ch·ªçn ch·ªã Lan ‚ù§Ô∏è.",
    createAt: "2025-06-26",
    hus_Name: "Ng√¥ B√° Duy",
    wife_Name: "Tr·∫ßn Kim Chi",
  }
]
);
  const [filteredFeedbacks, setFilteredFeedbacks] = useState([]);
  const [selectedStar, setSelectedStar] = useState(null);

  const [currentPage, setCurrentPage] = useState(1);
  const pageSize = 5;

  useEffect(() => {
    fetchDoctorInfo();
    fetchDoctorFeedback();
  }, [doctorId]);

  useEffect(() => {
    filterFeedbacks(selectedStar);
    setCurrentPage(1);
  }, [selectedStar, feedbacks]);

  const fetchDoctorInfo = async () => {
    try {
      const res = await axios.get(`/api/doctors/${doctorId}`);
      setDoctor(res.data);
    } catch (error) {
      console.error("L·ªói khi t·∫£i th√¥ng tin b√°c sƒ©:", error);
    }
  };

  const fetchDoctorFeedback = async () => {
    try {
      const res = await axios.get(`/api/doctors/${doctorId}/feedbacks`);
      setFeedbacks(res.data);
    } catch (error) {
      console.error("L·ªói khi t·∫£i ƒë√°nh gi√°:", error);
    }
  };

  const handleStarFilter = (value) => {
    setSelectedStar(value);
  };

  const filterFeedbacks = (star) => {
    if (!star) {
      setFilteredFeedbacks(feedbacks);
    } else {
      const filtered = feedbacks.filter((fb) => fb.star === star);
      setFilteredFeedbacks(filtered);
    }
  };

  const paginatedFeedbacks = filteredFeedbacks.slice(
    (currentPage - 1) * pageSize,
    currentPage * pageSize
  );

  if (!doctor) return <p>ƒêang t·∫£i th√¥ng tin b√°c sƒ©...</p>;

  const {
    gender,
    yob,
    experience,
    edu_LevelName,
    full_Name,
    mail,
    phone,
    img,
    avgStar,
    createAt,
    certificates = [],
  } = doctor;

  return (
    <div style={{ padding: "24px" }}>
      <Title level={3}>Th√¥ng tin b√°c sƒ©</Title>

      <div style={{ display: "flex", gap: "24px" }}>
        <img
          src={img}
          alt="Doctor"
          style={{
            width: 160,
            height: 160,
            borderRadius: "50%",
            objectFit: "cover",
          }}
        />
        <div>
          <Title level={4}>{full_Name}</Title>
          <Text>{mail}</Text>
          <br />
          <Text>{phone}</Text>
          <br />
          <Rate disabled defaultValue={avgStar || 0} />
        </div>
      </div>

      <Divider />

      <div>
        <p><b>Gi·ªõi t√≠nh:</b> {gender}</p>
        <p><b>NƒÉm sinh:</b> {dayjs(yob).format("DD/MM/YYYY")}</p>
        <p><b>Tr√¨nh ƒë·ªô:</b> <Tag color="blue">{edu_LevelName}</Tag></p>
        <p><b>Kinh nghi·ªám l√†m vi·ªác:</b> {experience} nƒÉm</p>

        {certificates.length > 0 && (
          <p>
            <b>Ch·ª©ng ch·ªâ:</b>{" "}
            <Space wrap>
              {certificates.slice(0, 3).map((cer, index) => (
                <Tag key={index}>{cer}</Tag>
              ))}
            </Space>
          </p>
        )}
      </div>

      <Divider />

      <Title level={4}>L·ªãch l√†m vi·ªác trong tu·∫ßn</Title>
      <WorkSchedule doctorId={doctorId} />

      <Divider />

      <div style={{ display: "flex", justifyContent: "space-between" }}>
        <Title level={4}>ƒê√°nh gi√° t·ª´ b·ªánh nh√¢n</Title>
        <Select
          allowClear
          placeholder="L·ªçc theo s·ªë sao"
          value={selectedStar}
          onChange={handleStarFilter}
          style={{ width: 160 }}
        >
          {[5, 4, 3, 2, 1].map((star) => (
            <Option key={star} value={star}>
              {star} sao
            </Option>
          ))}
        </Select>
      </div>

      {paginatedFeedbacks.map((fb) => (
        <FeedbackCard key={fb.fb_ID} data={fb} />
      ))}

      {filteredFeedbacks.length > pageSize && (
        <div style={{ textAlign: "center", marginTop: 16 }}>
          <Pagination
            current={currentPage}
            pageSize={pageSize}
            total={filteredFeedbacks.length}
            onChange={(page) => setCurrentPage(page)}
            showSizeChanger={false}
          />
        </div>
      )}
    </div>
  );
};

export default DoctorDetail;
